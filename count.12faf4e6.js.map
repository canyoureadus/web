{"version":3,"sources":["js/count.js"],"names":["days","hrs","min","sec","targetDate","Date","timeToLaunch","currentDate","diff","Math","abs","floor","countDownTimer","$","text","setTimeout","numberTransition","id","endPoint","transitionDuration","transitionEase","numberCount","animate","duration","easing","step","complete"],"mappings":";AAIA,IAGIA,EACAC,EACAC,EACAC,EANAC,EAAa,IAAIC,KAAK,uBA2B1B,SAASC,IAEHC,IAGAC,GAHc,IAAIH,KAGID,GAAc,IACpCI,EAAOC,KAAKC,IAAID,KAAKE,MAAMH,IAG/BR,EAAOS,KAAKE,MAAMH,EAAQ,OAC1BL,EAAMK,EAAc,GAAPR,EAAY,GAAK,GAG9BC,EAAMQ,KAAKE,MAAMR,EAAO,MACxBA,GAAkB,GAANF,EAAW,GAGvBC,EAAMO,KAAKE,MAAMR,EAAM,IACvBA,GAAkB,GAAND,EAOd,SAASU,IAEPN,IAGAO,EAAE,iBAAiBC,KAAKd,GACxBa,EAAE,kBAAkBC,KAAKb,GACzBY,EAAE,oBAAoBC,KAAKZ,GAC3BW,EAAE,oBAAoBC,KAAKX,GAG3BY,WAAWH,EAAgB,KAO7B,SAASI,EAAiBC,EAAIC,EAAUC,EAAoBC,GAE1DP,EAAE,CAAEQ,YAAaR,EAAEI,GAAIH,SAAUQ,QAC/B,CAAED,YAAaH,GACf,CACEK,SAAUJ,EACVK,OAAQJ,EACRK,KAAM,WACJZ,EAAEI,GAAIH,KAAKL,KAAKE,MAAM,KAAKU,eAE7BK,SAAU,WACRb,EAAEI,GAAIH,KAAK,KAAKO,gBAtExBR,EAAE,WAEAP,IAEAU,EAAiB,gBAAiBhB,EAAM,IAAM,eAC9CgB,EAAiB,iBAAkBf,EAAK,IAAM,eAC9Ce,EAAiB,mBAAoBd,EAAK,IAAM,eAChDc,EAAiB,mBAAoBb,EAAK,IAAM,eAEhDY,WAAWH,EAAgB","file":"count.12faf4e6.js","sourceRoot":"..","sourcesContent":["/* --------------------------\n * GLOBAL VARS\n * -------------------------- */\n// The date you want to count down to\nvar targetDate = new Date(\"2030/12/25 00:00:00\");\n\n// Other date related variables\nvar days;\nvar hrs;\nvar min;\nvar sec;\n\n/* --------------------------\n * ON DOCUMENT LOAD\n * -------------------------- */\n$(function () {\n  // Calculate time until launch date\n  timeToLaunch();\n  // Transition the current countdown from 0\n  numberTransition(\"#days .number\", days, 1000, \"easeOutQuad\");\n  numberTransition(\"#hours .number\", hrs, 1000, \"easeOutQuad\");\n  numberTransition(\"#minutes .number\", min, 1000, \"easeOutQuad\");\n  numberTransition(\"#seconds .number\", sec, 1000, \"easeOutQuad\");\n  // Begin Countdown\n  setTimeout(countDownTimer, 1001);\n});\n\n/* --------------------------\n * FIGURE OUT THE AMOUNT OF \n   TIME LEFT BEFORE LAUNCH\n * -------------------------- */\nfunction timeToLaunch() {\n  // Get the current date\n  var currentDate = new Date();\n\n  // Find the difference between dates\n  var diff = (currentDate - targetDate) / 1000;\n  var diff = Math.abs(Math.floor(diff));\n\n  // Check number of days until target\n  days = Math.floor(diff / (24 * 60 * 60));\n  sec = diff - days * 24 * 60 * 60;\n\n  // Check number of hours until target\n  hrs = Math.floor(sec / (60 * 60));\n  sec = sec - hrs * 60 * 60;\n\n  // Check number of minutes until target\n  min = Math.floor(sec / 60);\n  sec = sec - min * 60;\n}\n\n/* --------------------------\n * DISPLAY THE CURRENT \n   COUNT TO LAUNCH\n * -------------------------- */\nfunction countDownTimer() {\n  // Figure out the time to launch\n  timeToLaunch();\n\n  // Write to countdown component\n  $(\"#days .number\").text(days);\n  $(\"#hours .number\").text(hrs);\n  $(\"#minutes .number\").text(min);\n  $(\"#seconds .number\").text(sec);\n\n  // Repeat the check every second\n  setTimeout(countDownTimer, 1000);\n}\n\n/* --------------------------\n * TRANSITION NUMBERS FROM 0\n   TO CURRENT TIME UNTIL LAUNCH\n * -------------------------- */\nfunction numberTransition(id, endPoint, transitionDuration, transitionEase) {\n  // Transition numbers from 0 to the final number\n  $({ numberCount: $(id).text() }).animate(\n    { numberCount: endPoint },\n    {\n      duration: transitionDuration,\n      easing: transitionEase,\n      step: function () {\n        $(id).text(Math.floor(this.numberCount));\n      },\n      complete: function () {\n        $(id).text(this.numberCount);\n      },\n    }\n  );\n}\n"]}